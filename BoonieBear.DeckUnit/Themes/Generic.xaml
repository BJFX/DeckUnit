<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:BoonieBear.DeckUnit"
    xmlns:controls="clr-namespace:BoonieBear.DeckUnit.Controls"
    xmlns:Converter="clr-namespace:BoonieBear.DeckUnit.Converter"
    xmlns:tree="clr-namespace:BoonieBear.DeckUnit.Controls.Tree">

    <Converter:BackgroundStripeConverter x:Key="BackgroundStripe"/>
    <LinearGradientBrush x:Key="HeadingBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#828487" Offset="0"/>
        <GradientStop Color="#7E8083" Offset="0.5"/>
        <GradientStop Color="#555A5E" Offset="0.9"/>
        <GradientStop Color="#FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    
    <!-- Create stylised filter buttons -->
    <Style x:Key="filterButtonInactive" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="22" Height="22">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="2.5">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.0" RadiusX="0.7" RadiusY="0.5" >
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="PaleGreen" Offset="0"/>
                                        <GradientStop Color="Green" Offset="1"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="2.5">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,1.0" RadiusX="0.7" RadiusY="0.5" >
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="PaleGreen" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="1.5">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Path  Grid.RowSpan="1" Grid.ColumnSpan="1"
                              Fill="Black"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 1 L 4 5 L 8 1 Z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="filterButtonActive" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="22" Height="22">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="2.5">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,0.0" RadiusX="0.7" RadiusY="0.5" >
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="Yellow" Offset="0"/>
                                        <GradientStop Color="Orange" Offset="1"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="2.5">
                            <Ellipse.Fill>
                                <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,1.0" RadiusX="0.7" RadiusY="0.5" >
                                    <RadialGradientBrush.GradientStops>
                                        <GradientStop Color="OrangeRed" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </RadialGradientBrush.GradientStops>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Grid.RowSpan="1" Grid.ColumnSpan="1" Margin="1.5">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                        </Ellipse>
                        <Path  Grid.RowSpan="1" Grid.ColumnSpan="1"
                              Fill="Black"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{StaticResource HeadingBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!-- Modify the control template so that we do not have a button style  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Name="border" Height="40" BorderBrush="White" BorderThickness="0,5,0,5" Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Margin="4,3" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- style the conatiner which renders each individual cell within the sortable grid -->
    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItemStyle" >
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType='{x:Type ListViewItem}' >
                    <Border Name="BackgroundBorder"
                                BorderThickness="0,0,0,2"
                                BorderBrush="White" 
                                Background="{DynamicResource AccentColorBrush}">
                        <GridViewRowPresenter TextBlock.Foreground="White" 
                                                  Content="{TemplateBinding Content}"
                                                  Columns="{TemplateBinding GridView.ColumnCollection}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="#953735"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    
<!--TreeListView-->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="#00FFFFFF" Width="24" Height="20">
                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF7898B5" Width="13" Height="13" SnapsToDevicePixels="True">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.2" />
                                        <GradientStop Color="#FFC0B7A6" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z" Fill="#FF000000" Name="ExpandPath" Margin="1,1,1,1" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Path.Data" TargetName="ExpandPath">
                                <Setter.Value>
                                    <StreamGeometry>M0,2L0,3 5,3 5,2z</StreamGeometry>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <tree:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
    <tree:CanExpandConverter x:Key="CanExpandConverter"/>

    <Style TargetType="{x:Type tree:RowExpander}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tree:RowExpander}">
                    <ToggleButton x:Name="Expander" 
									  Style="{StaticResource ExpandCollapseToggleStyle}" 
									  Margin="{Binding Node.Level, Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  IsChecked="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  Visibility="{Binding Node.IsExpandable, Converter={StaticResource CanExpandConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  ClickMode="Press"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tree:TreeListItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
    </Style>

    <Style TargetType="{x:Type tree:TreeListItem}" x:Key="TreeListItemNodeStyle">
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" 
										  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
										  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
										  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
										  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
